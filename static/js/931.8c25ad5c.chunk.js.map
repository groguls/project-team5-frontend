{"version":3,"file":"static/js/931.8c25ad5c.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/InputEmailName/InputEmailName.js","components/SingUpForm/SingUpFormikForm.styled.js","pages/ForgotPasswordPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  padding: 10px 30px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px; /* відстань між іконкою та текстом */\n  max-width: 280px;\n  border-radius: 10px;\n  border: none;\n  height: 44px;\n\n  /* Зміна бекграунду кнопки */\n  background-color: ${props => props.$backgroundColor || '#407BFF'};\n\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  color: ${props => props.$textColor || 'white'};\n  text-align: center;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  /* Зміна ширини кнопки */\n  ${props =>\n    props.width &&\n    css`\n      width: ${props.width};\n    `}\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({\n  label,\n  icon,\n  onClick,\n  width,\n  backgroundColor,\n  textColor,\n}) => {\n  return (\n    <StyledButton\n      onClick={onClick}\n      width={width}\n      $backgroundColor={backgroundColor}\n      $textColor={textColor}\n    >\n      {icon && <img src={icon} alt=\"Icon\" />} {label}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { TextField, createTheme, ThemeProvider } from '@mui/material';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 321,\n      md: 768,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n  typography: {\n    fontSize: 16,\n    lineHeight: 20,\n  },\n});\n\nconst textFieldStyle = {\n  width: '280px',\n  height: '44px',\n  [theme.breakpoints.down('sm')]: {\n    width: '280px',\n  },\n  [theme.breakpoints.up('md')]: {\n    width: '336px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    width: '384px',\n  },\n};\n\nexport const InputNameEmail = ({\n  placeholderText,\n  error,\n  type,\n  value,\n  onChange,\n  onBlur,\n  id,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <TextField\n        sx={{\n          ...textFieldStyle,\n          '& .MuiInputBase-input': {\n            color: theme.colors.secondaryBlue,\n            padding: '12px 10px 12px 10px',\n            fontSize: theme.typography.fontSize,\n            lineHeight: theme.typography.lineHeight,\n            '&:hover': {\n              color: theme.colors.primaryBlue,\n            },\n            '&:focus': {\n              color: theme.colors.primaryBlue,\n            },\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderWidth: '1px',\n              borderRadius: '6px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n              padding: '12px 10px 12px 10px',\n              gap: '10px',\n            },\n            '&:hover fieldset': {\n              borderColor: theme.colors.secondaryBlue,\n            },\n            '&.Mui-focused fieldset': {\n              borderWidth: '1px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n            },\n          },\n          '&.Mui-error': {\n            '& .MuiInputBase-input': {\n              color: error\n                ? theme.colors.secondaryRed // Change text color when in error state\n                : theme.colors.secondaryBlue,\n            },\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: error\n                  ? theme.colors.secondaryRed // Change border color when in error state\n                  : theme.colors.secondaryBlue,\n              },\n            },\n          },\n          '& .MuiFormHelperText-root': {\n            fontSize: '14px', // Adjust the font size of the helperText\n            lineHeight: '18px',\n          },\n        }}\n        id={id}\n        placeholder={placeholderText}\n        variant=\"outlined\"\n        error={error}\n        helperText={error ? `${placeholderText} is invalid` : ''}\n        type={type}\n        name={type}\n        value={value}\n        autoComplete=\"off\"\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </ThemeProvider>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 280px;\n  /* padding-left: 20px;\n  padding-right: 20px; */\n  margin-left: auto;\n  margin-right: auto;\n  position: ablosute;\n  top: 80px;\n  left: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    /* padding-left: 32px;\n    padding-right: 32px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n    /* padding-left: 112px;\n    padding-right: 112px; */\n  }\n`;\n\nexport const InputForm = styled.div`\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  max-width: 280px;\n  height: 44px;\n  border-radius: 10px;\n  padding: 10px 30px;\n  border: none;\n  background-color: ${props => `${props.theme.colors.primaryBlue}`};\n  color: ${props => `${props.theme.colors.primaryWhite}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n\nexport const ButtonLink = styled.div`\n  max-width: 280px;\n  border: none;\n  background-color: transparent;\n  justify-content: start;\n  color: ${props => `${props.theme.colors.primaryBlue}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import Button from 'components/Button/Button';\nimport { InputNameEmail } from 'components/InputEmailName/InputEmailName';\nimport {\n  FormContainer,\n  InputForm,\n  Title,\n} from 'components/SingUpForm/SingUpFormikForm.styled';\nimport React, { useState } from 'react';\n// import { theme } from 'styles/theme';\n\nconst ForgotPasswordPage = () => {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const handleEmailChange = e => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    setEmailError(\n      emailPattern.test(newEmail) ? '' : 'Введите корректный email'\n    );\n  };\n\n  const handleSendClick = async evt => {\n    evt.preventDefault();\n    if (!emailError) {\n      try {\n        // Запит на бекенд\n        console.log('Email отправлен:', email);\n      } catch (error) {\n        console.error('Error send email:', error);\n\n        setEmailError('Error send email');\n      }\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Title>Forgot Password</Title>\n      <InputForm>\n        <label htmlFor=\"email\">Enter your email</label>\n        <InputNameEmail\n          placeholderText={'Email'}\n          type={'email'}\n          value={email}\n          onChange={handleEmailChange}\n          onBlur={() => {}}\n          id={'email'}\n          error={!!emailError}\n          helperText={emailError}\n        />\n      </InputForm>\n\n      <Button\n        label=\"Send\"\n        // backgroundColor={theme.colors.primaryBlue}\n        // textColor={theme.colors.primaryWhite}\n        onClick={handleSendClick}\n      />\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","$backgroundColor","$textColor","width","css","_templateObject2","_ref","label","icon","onClick","backgroundColor","textColor","_jsxs","children","_jsx","src","alt","theme","createTheme","breakpoints","values","xs","sm","md","lg","xl","colors","primaryWhite","primaryBlack","primaryBlue","secondaryGray","secondaryRed","secondaryBlue","secondaryOrange","secondaryGrayBlue","typography","fontSize","lineHeight","textFieldStyle","height","down","up","InputNameEmail","placeholderText","error","type","value","onChange","onBlur","id","ThemeProvider","TextField","sx","color","padding","borderWidth","borderRadius","borderColor","gap","placeholder","variant","helperText","concat","name","autoComplete","FormContainer","InputForm","Title","_templateObject3","_templateObject4","ButtonSubmit","_templateObject5","ButtonLink","_templateObject6","ForgotPasswordPage","email","setEmail","useState","emailError","setEmailError","htmlFor","e","newEmail","target","test","Button","async","evt","preventDefault","console","log"],"sourceRoot":""}