{"version":3,"file":"static/js/166.27da87fe.chunk.js","mappings":"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","sources":["components/AuthLayout/AuthLayout.styled.jsx","components/AuthLayout/AuthLayout.jsx","components/InputEmailName/InputEmailName.js","components/InputPassword/InputPassword.js","components/SingUpForm/SingUpFormikForm.styled.js","components/SignInForm/SignInFormikForm.js","pages/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport bgMob from '../../img/background/mobile/bg_signin@1x.png';\nimport bgMobRetina from '../../img/background/mobile/bg_signin@2x.png';\nimport bgBottleMob from '../../img/background/mobile/bottle_signin@1x.png';\nimport bgBottleMobRetina from '../../img/background/mobile/bottle_signin@2x.png';\nimport bgBottleTab from '../../img/background/tablet/bottle_signin@1x.png';\nimport bgBottleTabRetina from '../../img/background/tablet/bottle_signin@2x.png';\nimport bgDesk from '../../img/background/desktop/bg_signin@1x.png';\nimport bgDeskRetina from '../../img/background/desktop/bg_signin@2x.png';\nimport bgDeskBottle from '../../img/background/desktop/bottle_signin@1x.png';\nimport bgDeskBottleRetina from '../../img/background/desktop/bottle_signin@2x.png';\n\nexport const AuthLayoutStyles = styled.main`\n  background-image: url(${bgMob}), url(${bgBottleMob});\n  background-size: cover, 280px 210px;\n  background-position: top, bottom 20px center;\n  background-repeat: no-repeat;\n  height: calc(100vh - 56px);\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bgMobRetina}), url(${bgBottleMobRetina});\n  }\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 64px);\n    background-image: url(${bgBottleTab});\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgBottleTabRetina});\n      background-size: cover;\n      background-position: center;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    background-image: url(${bgDesk}), url(${bgDeskBottle});\n    height: calc(100vh - 60px);\n    background-size: contain, 916px 680px;\n    background-position: bottom 60px left, left -40px bottom 60px;\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${bgDeskRetina}), url(${bgDeskBottleRetina});\n    }\n  }\n`;\n","import { AuthLayoutStyles } from './AuthLayout.styled';\n\nconst AuthLayout = ({ children }) => {\n  return <AuthLayoutStyles>{children}</AuthLayoutStyles>;\n};\n\nexport default AuthLayout;\n","import React from 'react';\nimport { TextField, createTheme, ThemeProvider } from '@mui/material';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 321,\n      md: 768,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n  typography: {\n    fontSize: 16,\n    lineHeight: 20,\n  },\n});\n\nconst textFieldStyle = {\n  width: '280px',\n  height: '44px',\n\n  [theme.breakpoints.down('sm')]: {\n    width: '280px',\n  },\n  [theme.breakpoints.up('md')]: {\n    width: '336px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    width: '384px',\n  },\n};\n\nexport const InputNameEmail = ({\n  placeholderText,\n  error,\n  type,\n  value,\n  onChange,\n  onBlur,\n  id,\n  helperText,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <TextField\n        sx={{\n          ...textFieldStyle,\n          '& .MuiInputBase-input': {\n            color: theme.colors.secondaryBlue,\n            padding: '12px 10px 12px 10px',\n            fontSize: theme.typography.fontSize,\n            lineHeight: theme.typography.lineHeight,\n\n            '&:hover': {\n              color: theme.colors.primaryBlue,\n            },\n            '&:focus': {\n              color: theme.colors.primaryBlue,\n            },\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderWidth: '1px',\n              borderRadius: '6px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n              padding: '12px 10px 12px 10px',\n              gap: '10px',\n            },\n            '&:hover fieldset': {\n              borderColor: theme.colors.secondaryBlue,\n            },\n            '&.Mui-focused fieldset': {\n              borderWidth: '1px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n            },\n          },\n          '&.Mui-error': {\n            '& .MuiInputBase-input': {\n              color: error\n                ? theme.colors.secondaryRed // Change text color when in error state\n                : theme.colors.secondaryBlue,\n            },\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: error\n                  ? theme.colors.secondaryRed // Change border color when in error state\n                  : theme.colors.secondaryBlue,\n              },\n            },\n          },\n          '& .MuiFormHelperText-root': {\n            fontSize: '14px',\n            lineHeight: '18px',\n            margin: '0',\n            marginTop: '2px',\n          },\n        }}\n        id={id}\n        placeholder={placeholderText}\n        variant=\"outlined\"\n        error={error}\n        helperText={error ? `${helperText}` : ''}\n        type={type}\n        name={type}\n        value={value}\n        autoComplete=\"off\"\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </ThemeProvider>\n  );\n};\n","import { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport FormHelperText from '@mui/material/FormHelperText'; // Import FormHelperText\nimport { createTheme } from '@mui/material';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 321,\n      md: 768,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n  typography: {\n    fontSize: 16,\n    lineHeight: 20,\n  },\n});\n\nconst textFieldStyle = {\n  width: '280px',\n  height: '44px',\n  borderWidth: '1px',\n  borderRadius: '6px',\n  borderColor: theme.colors.secondaryBlue,\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderWidth: '1px',\n      borderRadius: '6px',\n      borderColor: theme.colors.secondaryBlue,\n    },\n    '&:hover fieldset': {\n      borderColor: theme.colors.secondaryBlue,\n    },\n    '&.Mui-focused fieldset': {\n      borderWidth: '1px',\n      borderColor: theme.colors.secondaryBlue,\n    },\n  },\n  [theme.breakpoints.down('sm')]: {\n    width: '280px',\n  },\n  [theme.breakpoints.up('md')]: {\n    width: '336px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    width: '384px',\n  },\n};\n\nexport default function InputPassword({\n  placeholderText,\n  error,\n  value,\n  id,\n  onChange,\n  onBlur,\n  helperText,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl\n      sx={{\n        ...textFieldStyle,\n        '& .MuiInputBase-root': {\n          padding: '0',\n        },\n      }}\n      variant=\"outlined\"\n      error={error} // Pass the error state to FormControl\n    >\n      <OutlinedInput\n        id={id}\n        type={showPassword ? 'text' : 'password'}\n        placeholder={placeholderText}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        autoComplete=\"off\"\n        sx={{\n          ...textFieldStyle,\n          '& .MuiInputBase-input': {\n            color: error\n              ? theme.colors.secondaryRed // Change text color for error state\n              : theme.colors.secondaryBlue,\n            fontSize: theme.typography.fontSize,\n            lineHeight: theme.typography.lineHeight,\n            padding: '12px 10px',\n            '&:hover': {\n              color: theme.colors.primaryBlue, // Change hover color\n            },\n            '&:focus': {\n              color: theme.colors.primaryBlue, // Change hover color\n            },\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderWidth: '1px',\n              borderRadius: '6px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color for error state\n                : theme.colors.secondaryBlue,\n            },\n            '&:hover fieldset': {\n              borderColor: error\n                ? theme.colors.secondaryRed // Change hover border color for error state\n                : theme.colors.secondaryBlue,\n            },\n            '&.Mui-focused fieldset': {\n              borderWidth: '1px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change focus border color for error state\n                : theme.colors.secondaryBlue,\n            },\n          },\n          '& .MuiSvgIcon-root': {\n            fontSize: '1rem',\n          },\n          '& .MuiIconButton-root.MuiIconButton-sizeMedium': {\n            padding: '12px 10px',\n            margin: '0',\n          },\n        }}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n              sx={{\n                color: theme.colors.primaryBlue, // Change icon color\n                m: '0px',\n                '& .MuiIconButton': {\n                  fontSize: '16px',\n                  p: '0',\n                },\n              }}\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n      {/* Helper text added directly to FormControl */}\n      <FormHelperText\n        sx={{\n          ...textFieldStyle,\n          color: theme.colors.secondaryRed,\n          fontSize: '14px', // Adjust the font size of the helperText\n          lineHeight: '18px',\n          margin: '0',\n        }}\n      >\n        {error ? `${helperText}` : ''}\n      </FormHelperText>\n    </FormControl>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const FormContainer = styled.form`\n  margin: 0 auto;\n  padding-top: 24px;\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0 auto 0 32px;\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 120px;\n    max-width: 384px;\n    margin: 0 198px 0 auto;\n  }\n`;\n\nexport const InputForm = styled.div`\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  max-width: 280px;\n  height: 44px;\n  border-radius: 10px;\n  padding: 10px 30px;\n  border: none;\n  background-color: ${props => `${props.theme.colors.primaryBlue}`};\n  color: ${props => `${props.theme.colors.primaryWhite}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n\nexport const ButtonLink = styled.div`\n  max-width: 280px;\n  border: none;\n  background-color: transparent;\n  justify-content: start;\n  color: ${props => `${props.theme.colors.primaryBlue}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { InputNameEmail } from 'components/InputEmailName/InputEmailName';\nimport InputPassword from 'components/InputPassword/InputPassword';\n\nimport { signIn } from '../../redux/auth/operations';\nimport {\n  ButtonLink,\n  ButtonSubmit,\n  FormContainer,\n  InputForm,\n  Title,\n} from '../SingUpForm/SingUpFormikForm.styled';\nimport { Container } from '../../styles/GlobalStyle';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nconst passwordRegex = /^.{8,64}$/;\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(emailRegex, {\n      message: `Invalid email.Please enter a valid email in the format: example@example.com.`,\n    })\n    .required('Required'),\n  password: Yup.string()\n    .matches(passwordRegex, {\n      message: `Invalid password. Password must be at least 8 characters long.`,\n    })\n    .required('Required'),\n});\n\nexport const SingInFormFormik = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: formSchema,\n    onSubmit: async (values, actions) => {\n      await dispatch(\n        signIn({\n          email: values.email,\n          password: values.password,\n        })\n      )\n        .unwrap()\n        .catch(error => {\n          toast.error(error);\n        });\n      actions.resetForm();\n    },\n  });\n  return (\n    <Container>\n      <FormContainer onSubmit={formik.handleSubmit}>\n        <Title>Sign In</Title>\n        <InputForm>\n          <label htmlFor=\"email\">Enter your email</label>\n          <InputNameEmail\n            placeholderText={'E-mail'}\n            type={'email'}\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            id={'email'}\n            helperText={'Invalid email.'}\n          />\n        </InputForm>\n        <InputForm style={{ marginTop: formik.errors.email ? '10px' : '0px' }}>\n          <label htmlFor=\"password\">Enter your password</label>\n          <InputPassword\n            placeholderText={'Password'}\n            type={'password'}\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            id={'password'}\n            helperText={'Invalid password.'}\n            onBlur={formik.handleBlur}\n          />\n        </InputForm>\n\n        <ButtonSubmit\n          type=\"submit\"\n          style={{ marginTop: formik.errors.password ? '10px' : '0px' }}\n        >\n          Sign In\n        </ButtonSubmit>\n        <ButtonLink>\n          <a href=\"forgot-password\">Forgot password?</a>\n        </ButtonLink>\n        <ButtonLink>\n          <a href=\"signup\">Sign Up</a>\n        </ButtonLink>\n      </FormContainer>\n    </Container>\n  );\n};\n","import AuthLayout from '../components/AuthLayout/AuthLayout';\nimport { SingInFormFormik } from 'components/SignInForm/SignInFormikForm';\n\nconst SignInPage = () => {\n  return (\n    <AuthLayout>\n      <SingInFormFormik />\n    </AuthLayout>\n  );\n};\n\nexport default SignInPage;\n"],"names":["AuthLayoutStyles","styled","main","_templateObject","_taggedTemplateLiteral","bgBottleMob","bgMobRetina","bgBottleMobRetina","bgBottleTab","bgBottleTabRetina","bgDesk","bgDeskBottle","bgDeskRetina","bgDeskBottleRetina","_ref","children","_jsx","theme","createTheme","breakpoints","values","xs","sm","md","lg","xl","colors","primaryWhite","primaryBlack","primaryBlue","secondaryGray","secondaryRed","secondaryBlue","secondaryOrange","secondaryGrayBlue","typography","fontSize","lineHeight","textFieldStyle","width","height","down","up","InputNameEmail","placeholderText","error","type","value","onChange","onBlur","id","helperText","ThemeProvider","TextField","sx","color","padding","borderWidth","borderRadius","borderColor","gap","margin","marginTop","placeholder","variant","concat","name","autoComplete","InputPassword","showPassword","setShowPassword","useState","_jsxs","FormControl","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","show","onMouseDown","event","preventDefault","edge","m","p","Visibility","VisibilityOff","FormHelperText","FormContainer","form","InputForm","div","_templateObject2","Title","_templateObject3","h2","_templateObject4","ButtonSubmit","button","_templateObject5","props","ButtonLink","_templateObject6","formSchema","Yup","shape","email","matches","message","required","password","SingInFormFormik","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","async","actions","signIn","unwrap","catch","toast","resetForm","Container","handleSubmit","htmlFor","handleChange","handleBlur","touched","Boolean","errors","style","href","SignInPage","AuthLayout"],"sourceRoot":""}