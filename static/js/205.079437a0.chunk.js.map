{"version":3,"file":"static/js/205.079437a0.chunk.js","mappings":"4PAeA,MAIMA,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,MAAOF,EAAAA,KACJG,QANc,6BAMM,CACnBC,QAAQ,iFAETC,SAAS,YACZC,SAAUN,EAAAA,KACPG,QATiB,YASM,CACtBC,QAAQ,mEAETC,SAAS,cAGDE,EAAmBA,KAC9B,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,MAAO,GACPI,SAAU,IAEZO,iBAAkBd,EAClBe,SAAUC,MAAOC,EAAQC,KACvBT,GACEU,EAAAA,EAAAA,IAAO,CACLhB,MAAOc,EAAOd,MACdI,SAAUU,EAAOV,YAGrBW,EAAQE,WAAW,IAGvB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAa,CAACP,SAAUJ,EAAOY,aAAaC,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAAAF,SAAC,aACPH,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAAAH,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAOG,QAAQ,QAAOJ,SAAC,sBACvBC,EAAAA,EAAAA,KAACI,EAAAA,EAAc,CACbC,gBAAiB,SACjBC,KAAM,QACNC,MAAOrB,EAAOM,OAAOd,MACrB8B,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAO2B,QAAQnC,OAASoC,QAAQ5B,EAAO6B,OAAOrC,OACrDsC,GAAI,QACJC,WAAY,uBAGhBrB,EAAAA,EAAAA,MAACM,EAAAA,GAAS,CAACgB,MAAO,CAAEC,UAAWjC,EAAO6B,OAAOrC,MAAQ,OAAS,OAAQqB,SAAA,EACpEC,EAAAA,EAAAA,KAAA,SAAOG,QAAQ,WAAUJ,SAAC,yBAC1BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAa,CACZf,gBAAiB,WACjBC,KAAM,WACNC,MAAOrB,EAAOM,OAAOV,SACrB0B,SAAUtB,EAAOuB,aACjBG,MAAO1B,EAAO2B,QAAQ/B,UAAYgC,QAAQ5B,EAAO6B,OAAOjC,UACxDkC,GAAI,WACJC,WAAY,0BAIhBjB,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CACXf,KAAK,SACLY,MAAO,CAAEC,UAAWjC,EAAO6B,OAAOjC,SAAW,OAAS,OAAQiB,SAC/D,aAGDC,EAAAA,EAAAA,KAACsB,EAAAA,GAAU,CAAAvB,UACTC,EAAAA,EAAAA,KAAA,KAAGuB,KAAK,SAAQxB,SAAC,gBAEL,EC9EpB,EARmByB,KAEfxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAA1B,UACTC,EAAAA,EAAAA,KAACjB,EAAgB,K","sources":["components/SignInForm/SignInFormikForm.js","pages/SignInPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { InputNameEmail } from 'components/InputEmailName/InputEmailName';\nimport InputPassword from 'components/InputPassword/InputPassword';\n\nimport { signIn } from '../../redux/auth/operations';\nimport {\n  ButtonLink,\n  ButtonSubmit,\n  FormContainer,\n  InputForm,\n  Title,\n} from '../SingUpForm/SingUpFormikForm.styled';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nconst passwordRegex = /^.{8,64}$/;\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(emailRegex, {\n      message: `Invalid email.Please enter a valid email in the format: example@example.com.`,\n    })\n    .required('Required'),\n  password: Yup.string()\n    .matches(passwordRegex, {\n      message: `Invalid password. Password must be at least 8 characters long.`,\n    })\n    .required('Required'),\n});\n\nexport const SingInFormFormik = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: formSchema,\n    onSubmit: async (values, actions) => {\n      dispatch(\n        signIn({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      actions.resetForm();\n    },\n  });\n  return (\n    <FormContainer onSubmit={formik.handleSubmit}>\n      <Title>Sign In</Title>\n      <InputForm>\n        <label htmlFor=\"email\">Enter your email</label>\n        <InputNameEmail\n          placeholderText={'E-mail'}\n          type={'email'}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          id={'email'}\n          helperText={'Invalid email.'}\n        />\n      </InputForm>\n      <InputForm style={{ marginTop: formik.errors.email ? '10px' : '0px' }}>\n        <label htmlFor=\"password\">Enter your password</label>\n        <InputPassword\n          placeholderText={'Password'}\n          type={'password'}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          id={'password'}\n          helperText={'Invalid password.'}\n        />\n      </InputForm>\n\n      <ButtonSubmit\n        type=\"submit\"\n        style={{ marginTop: formik.errors.password ? '10px' : '0px' }}\n      >\n        Sign In\n      </ButtonSubmit>\n      <ButtonLink>\n        <a href=\"signup\">Sign Up</a>\n      </ButtonLink>\n    </FormContainer>\n  );\n};\n","import AuthLayout from '../components/AuthLayout/AuthLayout';\nimport { SingInFormFormik } from 'components/SignInForm/SignInFormikForm';\n\nconst SignInPage = () => {\n  return (\n    <AuthLayout>\n      <SingInFormFormik />\n    </AuthLayout>\n  );\n};\n\nexport default SignInPage;\n"],"names":["formSchema","Yup","shape","email","matches","message","required","password","SingInFormFormik","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","async","values","actions","signIn","resetForm","_jsxs","FormContainer","handleSubmit","children","_jsx","Title","InputForm","htmlFor","InputNameEmail","placeholderText","type","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","id","helperText","style","marginTop","InputPassword","ButtonSubmit","ButtonLink","href","SignInPage","AuthLayout"],"sourceRoot":""}