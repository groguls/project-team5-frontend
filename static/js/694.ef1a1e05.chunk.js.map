{"version":3,"file":"static/js/694.ef1a1e05.chunk.js","mappings":"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","sources":["components/InputEmailName/InputEmailName.js","components/InputPassword/InputPassword.js","components/SingUpForm/SingUpFormikForm.styled.js","components/SingUpForm/SingUpFormikForm.js","pages/SignUpPage.jsx"],"sourcesContent":["import React from 'react';\nimport { TextField, createTheme, ThemeProvider } from '@mui/material';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 321,\n      md: 768,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n  typography: {\n    fontSize: 16,\n    lineHeight: 20,\n  },\n});\n\nconst textFieldStyle = {\n  width: '280px',\n  height: '44px',\n\n  [theme.breakpoints.down('sm')]: {\n    width: '280px',\n  },\n  [theme.breakpoints.up('md')]: {\n    width: '336px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    width: '384px',\n  },\n};\n\nexport const InputNameEmail = ({\n  placeholderText,\n  error,\n  type,\n  value,\n  onChange,\n  onBlur,\n  id,\n  helperText,\n}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <TextField\n        sx={{\n          ...textFieldStyle,\n          '& .MuiInputBase-input': {\n            color: theme.colors.secondaryBlue,\n            padding: '12px 10px 12px 10px',\n            fontSize: theme.typography.fontSize,\n            lineHeight: theme.typography.lineHeight,\n\n            '&:hover': {\n              color: theme.colors.primaryBlue,\n            },\n            '&:focus': {\n              color: theme.colors.primaryBlue,\n            },\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderWidth: '1px',\n              borderRadius: '6px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n              padding: '12px 10px 12px 10px',\n              gap: '10px',\n            },\n            '&:hover fieldset': {\n              borderColor: theme.colors.secondaryBlue,\n            },\n            '&.Mui-focused fieldset': {\n              borderWidth: '1px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color when in error state\n                : theme.colors.secondaryBlue,\n            },\n          },\n          '&.Mui-error': {\n            '& .MuiInputBase-input': {\n              color: error\n                ? theme.colors.secondaryRed // Change text color when in error state\n                : theme.colors.secondaryBlue,\n            },\n            '& .MuiOutlinedInput-root': {\n              '& fieldset': {\n                borderColor: error\n                  ? theme.colors.secondaryRed // Change border color when in error state\n                  : theme.colors.secondaryBlue,\n              },\n            },\n          },\n          '& .MuiFormHelperText-root': {\n            fontSize: '14px',\n            lineHeight: '18px',\n            margin: '0',\n            marginTop: '2px',\n          },\n        }}\n        id={id}\n        placeholder={placeholderText}\n        variant=\"outlined\"\n        error={error}\n        helperText={error ? `${helperText}` : ''}\n        type={type}\n        name={type}\n        value={value}\n        autoComplete=\"off\"\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </ThemeProvider>\n  );\n};\n","import { useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport FormHelperText from '@mui/material/FormHelperText'; // Import FormHelperText\nimport { createTheme } from '@mui/material';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 321,\n      md: 768,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  colors: {\n    primaryWhite: '#FFFFFF',\n    primaryBlack: '#2F2F2F',\n    primaryBlue: '#407BFF',\n    secondaryGray: '#ECF2FF',\n    secondaryRed: '#EF5050',\n    secondaryBlue: '#9EBBFF',\n    secondaryOrange: '#FF9D43',\n    secondaryGrayBlue: '#D7E3FF',\n  },\n  typography: {\n    fontSize: 16,\n    lineHeight: 20,\n  },\n});\n\nconst textFieldStyle = {\n  width: '280px',\n  height: '44px',\n  borderWidth: '1px',\n  borderRadius: '6px',\n  borderColor: theme.colors.secondaryBlue,\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderWidth: '1px',\n      borderRadius: '6px',\n      borderColor: theme.colors.secondaryBlue,\n    },\n    '&:hover fieldset': {\n      borderColor: theme.colors.secondaryBlue,\n    },\n    '&.Mui-focused fieldset': {\n      borderWidth: '1px',\n      borderColor: theme.colors.secondaryBlue,\n    },\n  },\n  [theme.breakpoints.down('sm')]: {\n    width: '280px',\n  },\n  [theme.breakpoints.up('md')]: {\n    width: '336px',\n  },\n  [theme.breakpoints.up('lg')]: {\n    width: '384px',\n  },\n};\n\nexport default function InputPassword({\n  placeholderText,\n  error,\n  value,\n  id,\n  onChange,\n  onBlur,\n  helperText,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <FormControl\n      sx={{\n        ...textFieldStyle,\n        '& .MuiInputBase-root': {\n          padding: '0',\n        },\n      }}\n      variant=\"outlined\"\n      error={error} // Pass the error state to FormControl\n    >\n      <OutlinedInput\n        id={id}\n        type={showPassword ? 'text' : 'password'}\n        placeholder={placeholderText}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        autoComplete=\"off\"\n        sx={{\n          ...textFieldStyle,\n          '& .MuiInputBase-input': {\n            color: error\n              ? theme.colors.secondaryRed // Change text color for error state\n              : theme.colors.secondaryBlue,\n            fontSize: theme.typography.fontSize,\n            lineHeight: theme.typography.lineHeight,\n            padding: '12px 10px',\n            '&:hover': {\n              color: theme.colors.primaryBlue, // Change hover color\n            },\n            '&:focus': {\n              color: theme.colors.primaryBlue, // Change hover color\n            },\n          },\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderWidth: '1px',\n              borderRadius: '6px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change border color for error state\n                : theme.colors.secondaryBlue,\n            },\n            '&:hover fieldset': {\n              borderColor: error\n                ? theme.colors.secondaryRed // Change hover border color for error state\n                : theme.colors.secondaryBlue,\n            },\n            '&.Mui-focused fieldset': {\n              borderWidth: '1px',\n              borderColor: error\n                ? theme.colors.secondaryRed // Change focus border color for error state\n                : theme.colors.secondaryBlue,\n            },\n          },\n          '& .MuiSvgIcon-root': {\n            fontSize: '1rem',\n          },\n          '& .MuiIconButton-root.MuiIconButton-sizeMedium': {\n            padding: '12px 10px',\n            margin: '0',\n          },\n        }}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n              sx={{\n                color: theme.colors.primaryBlue, // Change icon color\n                m: '0px',\n                '& .MuiIconButton': {\n                  fontSize: '16px',\n                  p: '0',\n                },\n              }}\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n      {/* Helper text added directly to FormControl */}\n      <FormHelperText\n        sx={{\n          ...textFieldStyle,\n          color: theme.colors.secondaryRed,\n          fontSize: '14px', // Adjust the font size of the helperText\n          lineHeight: '18px',\n          margin: '0',\n        }}\n      >\n        {error ? `${helperText}` : ''}\n      </FormHelperText>\n    </FormControl>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const FormContainer = styled.form`\n  margin: 0 auto;\n  padding-top: 24px;\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0 auto 0 32px;\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 140px;\n    max-width: 384px;\n    margin: 0 198px 0 auto;\n  }\n`;\n\nexport const InputForm = styled.div`\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  max-width: 280px;\n  height: 44px;\n  border-radius: 10px;\n  padding: 10px 30px;\n  border: none;\n  background-color: ${props => `${props.theme.colors.primaryBlue}`};\n  color: ${props => `${props.theme.colors.primaryWhite}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n\nexport const ButtonLink = styled.div`\n  max-width: 280px;\n  border: none;\n  background-color: transparent;\n  justify-content: start;\n  color: ${props => `${props.theme.colors.primaryBlue}`};\n  align-items: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { InputNameEmail } from 'components/InputEmailName/InputEmailName';\nimport InputPassword from 'components/InputPassword/InputPassword';\nimport {\n  ButtonLink,\n  ButtonSubmit,\n  FormContainer,\n  InputForm,\n  Title,\n} from './SingUpFormikForm.styled';\n\nimport { signUp } from '../../redux/auth/operations';\n\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nconst passwordRegex = /^.{8,64}$/;\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(emailRegex, {\n      message: `Invalid email.Please enter a valid email in the format: example@example.com.`,\n    })\n    .required('Required'),\n  password: Yup.string()\n    .matches(passwordRegex, {\n      message: `Invalid password. Password must be at least 8 characters long.`,\n    })\n    .required('Required'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Required'),\n});\n\nexport const SingUpFormFormik = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n    validationSchema: formSchema,\n    onSubmit: async (values, actions) => {\n      dispatch(\n        signUp({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      actions.resetForm();\n      console.log('Sign up successful!');\n      console.log(values.email);\n      console.log(values.password);\n    },\n  });\n  return (\n    <FormContainer onSubmit={formik.handleSubmit}>\n      <Title>Sign Up</Title>\n      <InputForm>\n        <label htmlFor=\"email\">Enter your email</label>\n        <InputNameEmail\n          placeholderText={'E-mail'}\n          type={'email'}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          id={'email'}\n          helperText={'Invalid email format'}\n        />\n      </InputForm>\n      <InputForm style={{ marginTop: formik.errors.email ? '10px' : '0px' }}>\n        <label htmlFor=\"password\">Enter your password</label>\n        <InputPassword\n          placeholderText={'Password'}\n          type={'password'}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          id={'password'}\n          helperText={'Must be at least 8 characters long'}\n          onBlur={formik.handleBlur}\n        />\n      </InputForm>\n\n      <InputForm style={{ marginTop: formik.errors.password ? '10px' : '0px' }}>\n        <label htmlFor=\"email\">Repeat password</label>\n        <InputPassword\n          placeholderText={'Repeat password'}\n          type={'password'}\n          value={formik.values.repeatPassword}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={\n            formik.touched.repeatPassword &&\n            Boolean(formik.errors.repeatPassword)\n          }\n          id={'repeatPassword'}\n          helperText={'Passwords must match'}\n        />\n      </InputForm>\n      <ButtonSubmit\n        type=\"submit\"\n        style={{ marginTop: formik.errors.repeatPassword ? '10px' : '0px' }}\n      >\n        Sign Up\n      </ButtonSubmit>\n      <ButtonLink>\n        <a href=\"signin\">Sign In</a>\n      </ButtonLink>\n    </FormContainer>\n  );\n};\n","import { SingUpFormFormik } from 'components/SingUpForm/SingUpFormikForm';\n\nconst SignUpPage = () => {\n  return (\n    <div>\n      <SingUpFormFormik />\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["theme","createTheme","breakpoints","values","xs","sm","md","lg","xl","colors","primaryWhite","primaryBlack","primaryBlue","secondaryGray","secondaryRed","secondaryBlue","secondaryOrange","secondaryGrayBlue","typography","fontSize","lineHeight","textFieldStyle","width","height","down","up","InputNameEmail","_ref","placeholderText","error","type","value","onChange","onBlur","id","helperText","_jsx","ThemeProvider","children","TextField","sx","color","padding","borderWidth","borderRadius","borderColor","gap","margin","marginTop","placeholder","variant","concat","name","autoComplete","InputPassword","showPassword","setShowPassword","useState","_jsxs","FormControl","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","show","onMouseDown","event","preventDefault","edge","m","p","Visibility","VisibilityOff","FormHelperText","FormContainer","styled","_templateObject","_taggedTemplateLiteral","InputForm","_templateObject2","Title","_templateObject3","_templateObject4","ButtonSubmit","_templateObject5","props","ButtonLink","_templateObject6","formSchema","Yup","shape","email","matches","message","required","password","repeatPassword","oneOf","SingUpFormFormik","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","async","actions","signUp","resetForm","console","log","handleSubmit","htmlFor","handleChange","handleBlur","touched","Boolean","errors","style","href","SignUpPage"],"sourceRoot":""}