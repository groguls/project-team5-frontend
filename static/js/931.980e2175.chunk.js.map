{"version":3,"file":"static/js/931.980e2175.chunk.js","mappings":"6KAEO,MAAMA,EAAeC,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6hCAYnBC,GAASA,EAAMC,kBAAoB,YAI9CD,GAASA,EAAME,YAAc,UAQpCF,GACAA,EAAMG,QACNC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gCACQC,EAAMG,S,aC3BrB,MAoBA,EApBeG,IAOR,IAPS,MACdC,EAAK,KACLC,EAAI,QACJC,EAAO,MACPN,EAAK,gBACLO,EAAe,UACfC,GACDL,EACC,OACEM,EAAAA,EAAAA,MAAChB,EAAY,CACXa,QAASA,EACTN,MAAOA,EACPF,iBAAkBS,EAClBR,WAAYS,EAAUE,SAAA,CAErBL,IAAQM,EAAAA,EAAAA,KAAA,OAAKC,IAAKP,EAAMQ,IAAI,SAAU,IAAET,IAC5B,C,oGCRnB,MAuDA,EAvD2BU,KACzB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IA0B7C,OACER,EAAAA,EAAAA,MAACW,EAAAA,GAAa,CAAAV,SAAA,EACZC,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAAAX,SAAC,qBACPD,EAAAA,EAAAA,MAACa,EAAAA,GAAS,CAAAZ,SAAA,EACRC,EAAAA,EAAAA,KAAA,SAAOY,QAAQ,QAAOb,SAAC,sBACvBC,EAAAA,EAAAA,KAACa,EAAAA,EAAc,CACbC,gBAAiB,QACjBC,KAAM,QACNC,MAAOZ,EACPa,SAjCkBC,IACxB,MAAMC,EAAWD,EAAEE,OAAOJ,MAC1BX,EAASc,GAGTX,EADqB,mDAENa,KAAKF,GAAY,GAAK,gHACpC,EA2BKG,OAAQA,OACRC,GAAI,QACJC,QAASjB,EACTkB,WAAYlB,QAIhBP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CACLjC,MAAM,OAGNE,QAnCkBgC,UAEtB,GADAC,EAAIC,kBACCtB,EACH,IAEEuB,QAAQC,IAAI,gEAAoB3B,EAKlC,CAJE,MAAOoB,GACPM,QAAQN,MAAM,oBAAqBA,GAEnChB,EAAc,mBAChB,CACF,MA0BgB,C","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/ForgotPasswordPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  padding: 10px 30px;\n  justify-content: center;\n  align-items: center;\n  gap: 8px; /* відстань між іконкою та текстом */\n  max-width: 280px;\n  border-radius: 10px;\n  border: none;\n  height: 44px;\n\n  /* Зміна бекграунду кнопки */\n  background-color: ${props => props.$backgroundColor || '#407BFF'};\n\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  color: ${props => props.$textColor || 'white'};\n  text-align: center;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  /* Зміна ширини кнопки */\n  ${props =>\n    props.width &&\n    css`\n      width: ${props.width};\n    `}\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({\n  label,\n  icon,\n  onClick,\n  width,\n  backgroundColor,\n  textColor,\n}) => {\n  return (\n    <StyledButton\n      onClick={onClick}\n      width={width}\n      $backgroundColor={backgroundColor}\n      $textColor={textColor}\n    >\n      {icon && <img src={icon} alt=\"Icon\" />} {label}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import Button from 'components/Button/Button';\nimport { InputNameEmail } from 'components/InputEmailName/InputEmailName';\nimport {\n  FormContainer,\n  InputForm,\n  Title,\n} from 'components/SingUpForm/SingUpFormikForm.styled';\nimport React, { useState } from 'react';\n// import { theme } from 'styles/theme';\n\nconst ForgotPasswordPage = () => {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const handleEmailChange = e => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    setEmailError(\n      emailPattern.test(newEmail) ? '' : 'Введите корректный email'\n    );\n  };\n\n  const handleSendClick = async evt => {\n    evt.preventDefault();\n    if (!emailError) {\n      try {\n        // Запит на бекенд\n        console.log('Email отправлен:', email);\n      } catch (error) {\n        console.error('Error send email:', error);\n\n        setEmailError('Error send email');\n      }\n    }\n  };\n\n  return (\n    <FormContainer>\n      <Title>Forgot Password</Title>\n      <InputForm>\n        <label htmlFor=\"email\">Enter your email</label>\n        <InputNameEmail\n          placeholderText={'Email'}\n          type={'email'}\n          value={email}\n          onChange={handleEmailChange}\n          onBlur={() => {}}\n          id={'email'}\n          error={!!emailError}\n          helperText={emailError}\n        />\n      </InputForm>\n\n      <Button\n        label=\"Send\"\n        // backgroundColor={theme.colors.primaryBlue}\n        // textColor={theme.colors.primaryWhite}\n        onClick={handleSendClick}\n      />\n    </FormContainer>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","props","$backgroundColor","$textColor","width","css","_templateObject2","_ref","label","icon","onClick","backgroundColor","textColor","_jsxs","children","_jsx","src","alt","ForgotPasswordPage","email","setEmail","useState","emailError","setEmailError","FormContainer","Title","InputForm","htmlFor","InputNameEmail","placeholderText","type","value","onChange","e","newEmail","target","test","onBlur","id","error","helperText","Button","async","evt","preventDefault","console","log"],"sourceRoot":""}